unit IODef;

interface
uses
     Windows,  Global, SeatMotorType;

const
    _WORD_PER_ST        = 2;        // 공정당 LAN WORD
    _LAN_IO_CH_COUNT    = (_WORD_PER_ST * 16  * 2); // (In + Out)
    _DIO_CH_COUNT       = (72 * 2); // Max(In: 12,  Out: 72) * 2 ; 공정별 DIO 객체 생성함으로 1공정 단위별 갯수

    MAX_MAIN_PIN_COUNT  = 34;
    MAX_MAT_PIN_COUNT   = 8;
    MAX_B_EXT_PIN_COUNT = 34;
    MAX_BUCKLE_PIN_COUNT= 4;

    MAX_SPEC_DI_COUNT = 0;
    MAX_MODEL_WD_COUNT = 3 * MAX_ST_COUNT;


    //=================================================================================
    // DI

    // 사양 IN
    DI_SPEC_CHK_START           = 0;

    // 모터 JOG
    DI_SLIDE_MTR_CW             = 0;
    DI_SLIDE_MTR_CCW            = 1;
    DI_HGT_MTR_CW               = 2;
    DI_HGT_MTR_CCW              = 3;
    DI_TILT_MTR_CW              = 4;
    DI_TILT_MTR_CCW             = 5;
    DI_EXT_MTR_CW               = 6;
    DI_EXT_MTR_CCW              = 7;
    DI_SWIVEL_FULL              = 8;
    DI_SWIVEL_RETURN            = 9;


    //=================================================================================
    // DO
    _DIO_OUT_START              = _DIO_CH_COUNT div 2;

    DO_IGN1                     = _DIO_OUT_START;
    DO_IGN2                     = _DIO_OUT_START + 1;
    DO_POSITIVE                 = _DIO_OUT_START + 2;
    DO_NEGATIVE                 = _DIO_OUT_START + 3;
    DO_SPARE4                   = _DIO_OUT_START + 4;
    DO_IMS_SET                  = _DIO_OUT_START + 5;
    DO_IMS_SW1                  = _DIO_OUT_START + 6;
    DO_IMS_SW2                  = _DIO_OUT_START + 7;
    DO_EASYACCESS               = _DIO_OUT_START + 8;
    DO_INU_100_PW               = _DIO_OUT_START + 9;
    DO_SPARE10                  = _DIO_OUT_START + 10;
    DO_SPARE11                  = _DIO_OUT_START + 11;

    DO_HOST_CUSH_02_OHM         = _DIO_OUT_START + 12;
    DO_HOST_CUSH_04_OHM         = _DIO_OUT_START + 13;
    DO_HOST_CUSH_06_OHM         = _DIO_OUT_START + 14;
    DO_HOST_CUSH_10_OHM         = _DIO_OUT_START + 15;
    DO_HOST_CUSH_20_OHM         = _DIO_OUT_START + 16;
    DO_HOST_BACK_02_OHM         = _DIO_OUT_START + 17;
    DO_HOST_BACK_04_OHM         = _DIO_OUT_START + 18;
    DO_HOST_BACK_06_OHM         = _DIO_OUT_START + 19;
    DO_HOST_BACK_10_OHM         = _DIO_OUT_START + 20;
    DO_HOST_BACK_20_OHM         = _DIO_OUT_START + 21;
    DO_SPARE21                  = _DIO_OUT_START + 22;
    DO_SPARE22                  = _DIO_OUT_START + 23;

    DO_RJ1_HI_NTC_10K           = _DIO_OUT_START + 24;
    DO_RJ1_H_MAT                = _DIO_OUT_START + 25;
    DO_RJ1_CCS_MAT              = _DIO_OUT_START + 26;
    DO_HI_CCS_MAT               = _DIO_OUT_START + 27;
    DO_JG1_HV_MAT               = _DIO_OUT_START + 28;
    //DO_JG1_HV_MAT               = _DIO_OUT_START + 29;
    //DO_JG1_HV_MAT               = _DIO_OUT_START + 30;
    //DO_JG1_HV_MAT               = _DIO_OUT_START + 31;
    //DO_JG1_HV_MAT               = _DIO_OUT_START + 32;
    DO_JG1_BACK_EXTN_DRV_PAS    = _DIO_OUT_START + 33;
    DO_RJ1_BACK_EXTN_DRV        = _DIO_OUT_START + 34;
    DO_HI_BACK_EXTN_DRV_PAS     = _DIO_OUT_START + 35;

    DO_RJ1_HI_CAR               = _DIO_OUT_START + 36;
    DO_RJ1_APSM_PASS            = _DIO_OUT_START + 37;
    DO_JG1_CAR                  = _DIO_OUT_START + 38;
    //DO_JG1_CAR                  = _DIO_OUT_START + 39;
    //DO_JG1_CAR                  = _DIO_OUT_START + 40;
    //DO_JG1_CAR                  = _DIO_OUT_START + 41;
    //DO_JG1_CAR                  = _DIO_OUT_START + 42;
    //DO_JG1_CAR                  = _DIO_OUT_START + 43;
    //DO_JG1_CAR                  = _DIO_OUT_START + 44;
    //DO_JG1_CAR                  = _DIO_OUT_START + 45;
    //DO_JG1_CAR                  = _DIO_OUT_START + 46;
    //DO_JG1_CAR                  = _DIO_OUT_START + 47;

    DO_CAN_100K                  = _DIO_OUT_START + 48;
    DO_CAN_500K                 = _DIO_OUT_START + 49;
    DO_CAN_SPARE                 = _DIO_OUT_START + 50;
    //DO_CAN_500K                 = _DIO_OUT_START + 51;
    //DO_CAN_500K                 = _DIO_OUT_START + 52;
    //DO_CAN_500K                 = _DIO_OUT_START + 53;
    //DO_CAN_500K                 = _DIO_OUT_START + 54;
    //DO_CAN_500K                 = _DIO_OUT_START + 55;
    //DO_CAN_500K                 = _DIO_OUT_START + 56;
    //DO_CAN_500K                 = _DIO_OUT_START + 57;
    //DO_CAN_500K                 = _DIO_OUT_START + 58;
    //DO_CAN_500K                 = _DIO_OUT_START + 59;

    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 60;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 61;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 62;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 63;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 64;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 65;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 66;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 67;
//    DO_RJ1_HI_PAS_SW            = _DIO_OUT_START + 68;
    DO_JG1_CURR_BUK             = _DIO_OUT_START + 69;
    DO_JG1_WORN_BUK             = _DIO_OUT_START + 70;
    DO_APT                      = _DIO_OUT_START + 71;

    DO_END                      = DO_APT;




    //=================================================================================
    _LAN_OUT_START              = _LAN_IO_CH_COUNT div 2;


    //=================================================================================
    // AI
    AI_MAIN_CURR            = 0;
    AI_MOTOR_CURR           = 1;
    AI_SHVU1                = 2;
    AI_SHVU2                = 3;
    AI_CURR_BUCK            = 4;
    AI_NOISE                = 5;
    AI_DISTANCE1            = 6;
    AI_DISTANCE2            = 7;

    AI_MAIN_CON_VOLT_START  = 8;
    AI_MAT_CON_VOLT_START   = 42;
    AI_B_EXT_CON_VOLT_START = 50;
    AI_BUCKLE_CON_VOLT_START= 82;

    AI_BUCK_IO_CH           = 85;
    AI_BUCK_CURR_CH         = 85;



    //=================================================================================
    //  AO
    SYS_REF_VOLT         = -1;        // 시스템 기준 전압 CH(-1 V)


    // 이후 진단 AI  추가 할 것

    //=================================================================================
    // Counter


implementation



end.
